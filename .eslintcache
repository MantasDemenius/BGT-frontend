[{"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\reportWebVitals.js":"1","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\Role.js":"2","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\components\\NavBar.jsx":"3","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\RegisterPage\\RegisterForm.jsx":"4","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\LoginPage\\LoginForm.jsx":"5","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\Routes.jsx":"6","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\HomePage\\HomePage.jsx":"7","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\ApiRequests.js":"8","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\PrivateRoute.jsx":"9","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\index.jsx":"10","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\App.jsx":"11","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\UserService.js":"12","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\components\\Footer.jsx":"13","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\Admin\\UsersPage\\UserList.jsx":"14","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\components\\GameDetailDialog.jsx":"15","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\GamePage\\CreateGame.jsx":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":98,"mtime":1607168730978,"results":"19","hashOfConfig":"20"},{"size":3444,"mtime":1607264746848,"results":"21","hashOfConfig":"20"},{"size":3510,"mtime":1607251080208,"results":"22","hashOfConfig":"20"},{"size":5226,"mtime":1607270781182,"results":"23","hashOfConfig":"20"},{"size":1468,"mtime":1607264928887,"results":"24","hashOfConfig":"20"},{"size":4136,"mtime":1607264569476,"results":"25","hashOfConfig":"20"},{"size":2025,"mtime":1607270828907,"results":"26","hashOfConfig":"20"},{"size":858,"mtime":1607264501512,"results":"27","hashOfConfig":"20"},{"size":198,"mtime":1607200070357,"results":"28","hashOfConfig":"20"},{"size":640,"mtime":1607252843199,"results":"29","hashOfConfig":"20"},{"size":695,"mtime":1607270764195,"results":"30","hashOfConfig":"20"},{"size":1864,"mtime":1607252977529,"results":"31","hashOfConfig":"20"},{"size":105,"mtime":1607200053099,"results":"32","hashOfConfig":"20"},{"size":2161,"mtime":1607262550223,"results":"33","hashOfConfig":"20"},{"size":5409,"mtime":1607269157104,"results":"34","hashOfConfig":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lwxk7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"18wpxvn",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\reportWebVitals.js",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\Role.js",[],["71","72","73","74","75","76"],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\components\\NavBar.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\RegisterPage\\RegisterForm.jsx",["77"],"import React from 'react';\nimport {\n  Formik, Field, Form, ErrorMessage,\n} from 'formik';\nimport * as Yup from 'yup';\n\nconst RegisterForm = () => (\n  <Formik\n    initialValues={{\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    }}\n    validationSchema={Yup.object().shape({\n      firstName: Yup.string()\n        .required('First Name is required'),\n      lastName: Yup.string()\n        .required('Last Name is required'),\n      email: Yup.string()\n        .email('Email is invalid')\n        .required('Email is required'),\n      password: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Password is required'),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm Password is required'),\n    })}\n    onSubmit={(fields) => {\n      console.log(`SUCCESS!! :-)\\n\\n${JSON.stringify(fields, null, 4)}`);\n    }}\n  >\n    {(props) => {\n      const {\n        touched,\n        errors,\n        isSubmitting,\n        handleSubmit,\n      } = props;\n      return (\n        <Form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">\n              First Name\n              {' '}\n              <Field\n                name=\"firstName\"\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                className={`form-control${errors.firstName && touched.firstName ? ' is-invalid' : ''}`}\n              />\n              <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">\n              Last Name\n              {' '}\n              <Field name=\"lastName\" type=\"text\" className={`form-control${errors.lastName && touched.lastName ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">\n              Email\n              {' '}\n              <Field name=\"email\" type=\"text\" className={`form-control${errors.email && touched.email ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">\n              Password\n              {' '}\n              <Field name=\"password\" type=\"password\" className={`form-control${errors.password && touched.password ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">\n              Confirm Password\n              {' '}\n              <Field name=\"confirmPassword\" type=\"password\" className={`form-control${errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary mr-2\">Register</button>\n          </div>\n        </Form>\n      );\n    }}\n  </Formik>\n);\nexport default RegisterForm;\n","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\LoginPage\\LoginForm.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\Routes.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\HomePage\\HomePage.jsx",["78"],"import React, { useState, useEffect } from 'react';\nimport {\n  Button, CardActions, Grid, Typography, makeStyles, Container, Grow,\n} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { getNoTokenRequest } from '../../helper/ApiRequests';\nimport GameDetailDialog from '../../components/GameDetailDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n  const [originalGames, setOriginalGames] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await getNoTokenRequest('/games/original');\n      setOriginalGames(response.data);\n      console.log(response.data);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Album layout\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Something short and leading about the collection below—its contents, the creator,\n              etc.\n              Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n              entirely.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Main call to action\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Secondary action\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {originalGames.map((game) => (\n              <Grow\n                key={game.id}\n                in\n                style={{ transformOrigin: '0 0 0' }}\n                {...({ timeout: 2000 })}\n              >\n                <Grid item xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://source.unsplash.com/collection/board-game\"\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {game.title}\n                      </Typography>\n                      <Typography>\n                        {game.description}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <GameDetailDialog item={game} />\n                      {/* <Button size=\"small\" color=\"primary\">\n                        View\n                      </Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Edit\n                      </Button> */}\n                    </CardActions>\n                  </Card>\n                </Grid>\n              </Grow>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default HomePage;\n","C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\ApiRequests.js",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\PrivateRoute.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\index.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\App.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\helper\\UserService.js",["79","80"],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\components\\Footer.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\Admin\\UsersPage\\UserList.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\components\\GameDetailDialog.jsx",[],"C:\\Work\\Universitetas\\2020-2021 4 kursas\\Saitynas\\bgt\\bgt-frontend\\src\\pages\\GamePage\\CreateGame.jsx",["81","82"],"import React, { useState, useEffect } from 'react';\nimport {\n  Container, makeStyles, Typography, CssBaseline, TextField,\n  FormControl, Select, MenuItem,\n  Button,\n  InputLabel,\n} from '@material-ui/core';\nimport { Form, Formik, ErrorMessage } from 'formik';\n// import { useHistory } from 'react-router';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { getNoTokenRequest, postRequest } from '../../helper/ApiRequests';\nimport { getUser } from '../../helper/UserService';\n\nconst StyledErrorDiv = styled.div`\n    color: red;`;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    margin: theme.spacing(1, 0),\n    minWidth: 120,\n  },\n}));\n\nconst CreateGame = () => {\n//   const history = useHistory();\n  const classes = useStyles();\n  const [languages, setLanguages] = useState([]);\n\n  useEffect(() => {\n    async function fetchLanguages() {\n      const response = await getNoTokenRequest('/languages');\n      setLanguages(response.data);\n      console.log(response.data);\n    }\n    fetchLanguages();\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{ title: '', description: '', language: '' }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string().required('Title is required'),\n        description: Yup.string()\n          .required('Description is required')\n          .min(5, 'Description is too short - should be 5 characters minimum')\n          .max(255, 'Description is too long - should be 255 characters maximum'),\n        language: Yup.string().required('Language is required'),\n      })}\n      onSubmit={async (values, { setSubmitting, setFieldError }) => {\n        const user = getUser();\n        const request = {\n          title: values.title,\n          description: values.description,\n          languageId: values.language,\n          originalGameId: 0,\n          author: user.name,\n          userId: 10,\n        };\n\n        const response = await postRequest('/games', request);\n        if (response.status === 'OK') {\n          setSubmitting(false);\n        //   history.push('/');\n        //   history.go(0);\n        } else {\n          console.log(response);\n          //   setFieldError('errors', 'Username or password is incorrect!');\n          setFieldError('title', 'error');\n        }\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Typography component=\"h1\" variant=\"h5\">\n                Create a new board game\n              </Typography>\n            </div>\n            <Form className={classes.form} onSubmit={handleSubmit}>\n              <TextField\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                label=\"Title\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                placeholder=\"Enter game title\"\n                autoFocus\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <ErrorMessage component={StyledErrorDiv} name=\"title\" />\n              <TextField\n                type=\"text\"\n                id=\"description\"\n                name=\"description\"\n                label=\"Description\"\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                placeholder=\"Enter game description\"\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <ErrorMessage component={StyledErrorDiv} name=\"description\" />\n              {/* https://material-ui.com/components/autocomplete */}\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"select-language-label\">Language</InputLabel>\n                <Select\n                  id=\"language\"\n                  name=\"language\"\n                  label=\"Language\"\n                  labelId=\"select-language-label\"\n                  value={values.language}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                >\n                  {languages.map((language) => (\n                    <MenuItem key={language.id} value={language.id}>{language.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                className={classes.submit}\n              >\n                Create\n              </Button>\n            </Form>\n          </Container>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default CreateGame;\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":32,"column":7,"nodeType":"97","messageId":"98","endLine":32,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":48,"column":7,"nodeType":"97","messageId":"98","endLine":48,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":18,"column":3,"nodeType":"97","messageId":"98","endLine":18,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":27,"column":5,"nodeType":"97","messageId":"98","endLine":27,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":51,"column":7,"nodeType":"97","messageId":"98","endLine":51,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":84,"column":11,"nodeType":"97","messageId":"98","endLine":84,"endColumn":22},"lines-around-directive",["99"],"no-spaced-func",["100"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]