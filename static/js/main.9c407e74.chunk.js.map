{"version":3,"sources":["helper/ApiRequests.js","helper/UserService.js","pages/LoginPage/LoginForm.jsx","pages/RegisterPage/RegisterForm.jsx","components/NavBar.jsx","helper/PrivateRoute.jsx","pages/Admin/UsersPage/UserList.jsx","helper/Role.js","components/GameDetailDialog.jsx","helper/HelperFunctions.js","pages/HomePage/HomePage.jsx","components/Footer.jsx","pages/GamePage/CreateGame.jsx","Routes.jsx","App.jsx","index.jsx"],"names":["API_ROOT","process","RESPONSE_STATUS","sendRequest","path","method","data","a","token","localStorage","getItem","req","Request","body","JSON","stringify","headers","Authorization","fetch","response","ok","json","status","sendNoTokenRequest","postNoTokenRequest","getNoTokenRequest","deleteRequest","postRequest","user","id","name","roles","loggedIn","removeUser","removeItem","setUser","jwtDecode","sub","scopes","getRequest","getUser","useStyles","makeStyles","textField","background","WebkitBoxShadow","StyledDiv","styled","div","StyledAvatar","Avatar","StyledForm","Form","StyledSubmitButton","Button","StyledErrorDiv","LoginForm","history","useHistory","classes","initialValues","username","password","errors","validationSchema","Yup","shape","required","onSubmit","values","setSubmitting","setFieldError","setItem","push","go","props","isSubmitting","handleChange","handleBlur","handleSubmit","Container","component","maxWidth","CssBaseline","Typography","variant","TextField","disabled","type","label","margin","fullWidth","placeholder","autoFocus","inputProps","className","value","onChange","onBlur","autoComplete","FormControlLabel","control","Checkbox","color","Grid","container","item","xs","Link","href","RegisterForm","firstName","lastName","email","confirmPassword","min","oneOf","touched","htmlFor","theme","ul","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","grey","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","logout","window","location","NavBar","AppBar","position","elevation","Toolbar","noWrap","routerLink","to","underline","includes","onClick","PrivateRoute","Component","rest","render","split","some","r","indexOf","pathname","UserList","Role","Admin","Creator","Basic","GameDetailDialog","handleDeleteGame","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","down","handleClose","size","Dialog","onClose","aria-labelledby","DialogTitle","title","DialogContent","DialogContentText","description","author","language","DialogActions","removeItemFromArrayById","array","removeIndex","map","obj","splice","icon","marginRight","paper","heroButtons","cardGrid","card","height","flexDirection","cardMedia","cardContent","HomePage","originalGames","setOriginalGames","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","useEffect","fetchOriginalGames","handleSnackbarOpen","message","fetchDeleteGame","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","game","Grow","in","style","transformOrigin","timeout","sm","md","Card","CardMedia","image","CardContent","gutterBottom","slice","CardActions","Copyright","align","Date","getFullYear","Footer","avatar","secondary","main","form","width","submit","formControl","minWidth","CreateGame","languages","setLanguages","fetchLanguages","max","request","languageId","originalGameId","userId","multiline","rows","FormControl","InputLabel","Select","labelId","MenuItem","Routes","basename","exact","root","minHeight","App","loading","setLoading","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9c407e74.chunk.js","sourcesContent":["const API_ROOT = process.env.REACT_APP_BE_BASE_URL;\n\nexport const RESPONSE_STATUS = {\n  OK: 'OK',\n  NO_CONNECTION: 'NO_CONNECTION',\n  BAD_RESPONSE: 'BAD_RESPONSE',\n};\n\nasync function sendRequest(path, method, data) {\n  try {\n    const token = localStorage.getItem('token');\n    const req = new Request(API_ROOT + path, {\n      method,\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const response = await fetch(req);\n    if (response.ok) {\n      try {\n        return { status: RESPONSE_STATUS.OK, data: await response.json() };\n      } catch (d) {\n        return { status: RESPONSE_STATUS.OK };\n      }\n    } else {\n      return { status: RESPONSE_STATUS.BAD_RESPONSE };\n    }\n  } catch (e) {\n    return { status: RESPONSE_STATUS.NO_CONNECTION };\n  }\n}\n\nasync function sendNoTokenRequest(path, method, data) {\n  try {\n    const req = new Request(API_ROOT + path, {\n      method,\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const response = await fetch(req);\n    if (response.ok) {\n      try {\n        return { status: RESPONSE_STATUS.OK, data: await response.json() };\n      } catch (d) {\n        return { status: RESPONSE_STATUS.OK };\n      }\n    } else {\n      return { status: RESPONSE_STATUS.BAD_RESPONSE };\n    }\n  } catch (e) {\n    return { status: RESPONSE_STATUS.NO_CONNECTION };\n  }\n}\n\nexport async function postNoTokenRequest(path, data) {\n  return sendNoTokenRequest(path, 'POST', data);\n}\n\nexport async function getNoTokenRequest(path) {\n  return sendNoTokenRequest(path, 'GET');\n}\n\nexport async function deleteRequest(path) {\n  return sendRequest(path, 'DELETE');\n}\n\nexport async function putRequest(path, data) {\n  return sendRequest(path, 'PUT', data);\n}\n\nexport async function getRequest(path) {\n  return sendRequest(path, 'GET');\n}\n\nexport async function postRequest(path, data) {\n  return sendRequest(path, 'POST', data);\n}\n","import jwtDecode from 'jwt-decode';\nimport { getRequest } from './ApiRequests';\n\nconst user = {\n  id: 0,\n  name: '',\n  roles: '',\n  loggedIn: false,\n};\n\nexport const setToken = (token) => {\n  localStorage.setItem('token', token);\n};\n\nexport const removeToken = () => {\n  localStorage.removeItem('token');\n};\n\nexport const removeUser = () => {\n  removeToken();\n  user.id = 0;\n  user.name = '';\n  user.roles = '';\n  user.loggedIn = false;\n};\n\nexport const setUser = () => {\n  if (localStorage.getItem('token')) {\n    const { sub, scopes } = jwtDecode(localStorage.getItem('token'));\n    user.id = getRequest(`/users/${sub}/id`);\n    user.name = sub;\n    user.roles = scopes;\n    user.loggedIn = true;\n  }\n};\n\nexport const getUser = () => user;\n// rafce\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport {\n  Formik,\n  Form, ErrorMessage,\n} from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core';\nimport { setToken, setUser } from '../../helper/UserService';\nimport { postNoTokenRequest } from '../../helper/ApiRequests';\n\nconst useStyles = makeStyles(() => ({\n  textField: {\n    background: 'white',\n    WebkitBoxShadow: '0 0 0 1000px white inset',\n  },\n}));\n\nconst StyledDiv = styled.div`\n  margin-top: 64px;\n  display:flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin: 8px;\n  background-color: red;\n`;\n\nconst StyledForm = styled(Form)`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  margin: 24px 0 16px;\n`;\n\nconst StyledErrorDiv = styled.div`\n    color: red;`;\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <Formik\n      initialValues={{ username: '', password: '', errors: '' }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string().required('Username is required'),\n        password: Yup.string()\n          .required('No password provided.'),\n      // .min(8, 'Password is too short - should be 8 chars minimum.')\n      // .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n      })}\n      onSubmit={async (values, { setSubmitting, setFieldError }) => {\n        const response = await postNoTokenRequest('/authenticate', values);\n        if (response.status === 'OK') {\n          setToken(response.data.token);\n          setUser();\n          setSubmitting(false);\n          history.push('/');\n          history.go(0);\n        } else {\n          setFieldError('errors', 'Username or password is incorrect!');\n        // setFieldError('username', 'error');\n        }\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <StyledDiv>\n              <StyledAvatar>\n                <LockOutlinedIcon />\n              </StyledAvatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n              </Typography>\n              <StyledForm onSubmit={handleSubmit}>\n                <TextField\n                  id=\"errors\"\n                  name=\"errors\"\n                  disabled\n                  type=\"hidden\"\n                />\n                <ErrorMessage component={StyledErrorDiv} name=\"errors\" />\n                <TextField\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  label=\"Username\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  placeholder=\"Enter your username\"\n                  autoFocus\n                  inputProps={{ className: classes.textField }}\n                  value={values.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                <ErrorMessage component={StyledErrorDiv} name=\"username\" />\n                <TextField\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  label=\"Password\"\n                  autoComplete=\"current-password\"\n                  inputProps={{ className: classes.textField }}\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                <ErrorMessage component={StyledErrorDiv} name=\"password\" />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                <StyledSubmitButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Sign In\n                </StyledSubmitButton>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link href=\"#\" variant=\"body2\">\n                      Don&apos;t have an account? Sign Up\n                    </Link>\n                  </Grid>\n                </Grid>\n              </StyledForm>\n            </StyledDiv>\n          </Container>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Formik, Field, Form, ErrorMessage,\n} from 'formik';\nimport * as Yup from 'yup';\n\nconst RegisterForm = () => (\n  <Formik\n    initialValues={{\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    }}\n    validationSchema={Yup.object().shape({\n      firstName: Yup.string()\n        .required('First Name is required'),\n      lastName: Yup.string()\n        .required('Last Name is required'),\n      email: Yup.string()\n        .email('Email is invalid')\n        .required('Email is required'),\n      password: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Password is required'),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm Password is required'),\n    })}\n  >\n    {(props) => {\n      const {\n        touched,\n        errors,\n        isSubmitting,\n        handleSubmit,\n      } = props;\n      return (\n        <Form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">\n              First Name\n              {' '}\n              <Field\n                name=\"firstName\"\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                className={`form-control${errors.firstName && touched.firstName ? ' is-invalid' : ''}`}\n              />\n              <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">\n              Last Name\n              {' '}\n              <Field name=\"lastName\" type=\"text\" className={`form-control${errors.lastName && touched.lastName ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">\n              Email\n              {' '}\n              <Field name=\"email\" type=\"text\" className={`form-control${errors.email && touched.email ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">\n              Password\n              {' '}\n              <Field name=\"password\" type=\"password\" className={`form-control${errors.password && touched.password ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">\n              Confirm Password\n              {' '}\n              <Field name=\"confirmPassword\" type=\"password\" className={`form-control${errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary mr-2\">Register</button>\n          </div>\n        </Form>\n      );\n    }}\n  </Formik>\n);\nexport default RegisterForm;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link as routerLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, CssBaseline, Toolbar, Typography, Button, makeStyles, Link,\n} from '@material-ui/core';\nimport { removeUser } from '../helper/UserService';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst logout = () => {\n  removeUser();\n  window.location.href = '/BGT-frontend';\n};\n\nconst NavBar = ({ user }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n            <Link component={routerLink} to=\"/\" color=\"inherit\" variant=\"inherit\" underline=\"none\">\n              BGT\n            </Link>\n          </Typography>\n          <nav>\n            {/* {user.name}\n            {' '}\n            {user.roles}\n            {' '}\n            {String(user.loggedIn)} */}\n            {/* <Link variant=\"button\" color=\"textPrimary\" component={routerLink} to=\"/\"\n            className={classes.link}>\n              Home\n            </Link> */}\n            {(user.roles.includes('CREATOR') || user.roles.includes('ADMIN')) && (\n            <Link\n              variant=\"button\"\n              color=\"inherit\"\n              component={routerLink}\n              to=\"/games/add\"\n              className={classes.link}\n            >\n              Add game\n            </Link>\n            )}\n            {/* <Link variant=\"button\" color=\"textPrimary\" className={classes.link}>\n              {user.name}\n            </Link> */}\n            {/* {!user.loggedIn && (\n          <Link variant=\"button\" color=\"textPrimary\" href=\"/\">\n            Login\n          </Link>\n          )} */}\n          </nav>\n          {!user.loggedIn && (\n            <Button component={routerLink} to=\"/login\" color=\"inherit\" variant=\"outlined\" className={classes.link}>\n              Login\n            </Button>\n          )}\n          {user.loggedIn && (\n            <Button onClick={logout} color=\"inherit\" variant=\"outlined\" className={classes.link}>\n              Logout\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    roles: PropTypes.string,\n    loggedIn: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default NavBar;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component, user, roles, ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      if (!user.loggedIn) {\n        return <Redirect to={{ pathname: '/' }} />;\n      }\n      if (!user.roles.split(',').some((r) => roles.indexOf(r) >= 0)) {\n        return <Redirect to={{ pathname: '/' }} />;\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\nPrivateRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    roles: PropTypes.string,\n    loggedIn: PropTypes.bool,\n  }).isRequired,\n  roles: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\n\nconst UserList = () => (\n  <div>user list</div>\n);\n\nexport default UserList;\n","const Role = {\n  Admin: 'ADMIN',\n  Creator: 'CREATOR',\n  Basic: 'BASIC',\n};\n\nexport default Role;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst GameDetailDialog = ({ item, handleDeleteGame }) => {\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\n        Details\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{item.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Description:\n            {' '}\n            {item.description}\n          </DialogContentText>\n          <DialogContentText>\n            Author:\n            {' '}\n            {item.author}\n          </DialogContentText>\n          <DialogContentText>\n            Language:\n            {' '}\n            {item.language}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleDeleteGame(item.id); handleClose(); }} color=\"secondary\">\n            Delete\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nGameDetailDialog.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.number,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    language: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n  handleDeleteGame: PropTypes.func.isRequired,\n};\n\nexport default GameDetailDialog;\n","const removeItemFromArrayById = (array, id) => {\n  const removeIndex = array.map((obj) => obj.id).indexOf(id);\n  if (removeIndex > -1) {\n    array.splice(removeIndex, 1);\n    return array;\n  }\n  return array;\n};\n\nexport default removeItemFromArrayById;\n","import React, { useState, useEffect } from 'react';\nimport {\n  CardActions, Grid, Typography, makeStyles, Container, Grow, Snackbar,\n} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { getNoTokenRequest, deleteRequest } from '../../helper/ApiRequests';\nimport GameDetailDialog from '../../components/GameDetailDialog';\nimport removeItemFromArrayById from '../../helper/HelperFunctions';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n  const [originalGames, setOriginalGames] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    async function fetchOriginalGames() {\n      const response = await getNoTokenRequest('/games/original');\n      setOriginalGames(response.data);\n    }\n    fetchOriginalGames();\n  }, []);\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleSnackbarOpen = (message) => {\n    setSnackbarMessage(message);\n    setSnackbarOpen(true);\n  };\n\n  const handleDeleteGame = (id) => {\n    async function fetchDeleteGame() {\n      const response = await deleteRequest(`/games/${id}`);\n      if (response.status === 'OK') {\n        setOriginalGames(removeItemFromArrayById(originalGames, id));\n        handleSnackbarOpen('Game was successfully deleted');\n      }\n    }\n    fetchDeleteGame();\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        {/* <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Album layout\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Something short and leading about the collection below—its contents, the creator,\n              etc.\n              Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n              entirely.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Main call to action\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Secondary action\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div> */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            autoHideDuration={6000}\n            open={snackbarOpen}\n            onClose={handleSnackbarClose}\n            message={snackbarMessage}\n          />\n          <Grid container spacing={4}>\n            {originalGames.map((game) => (\n              <Grow\n                key={game.id}\n                in\n                style={{ transformOrigin: '0 0 0' }}\n                {...({ timeout: 2000 })}\n              >\n                <Grid item xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://source.unsplash.com/collection/board-game\"\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {game.title}\n                      </Typography>\n                      <Typography>\n                        {game.description.slice(0, 70)}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <GameDetailDialog item={game} handleDeleteGame={handleDeleteGame} />\n                      {/* <Button size=\"small\" color=\"primary\">\n                        View\n                      </Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Edit\n                      </Button> */}\n                    </CardActions>\n                  </Card>\n                </Grid>\n              </Grow>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport {\n  Container, Typography, makeStyles, Link,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 'auto',\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nconst Copyright = () => (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    {'Copyright © '}\n    <Link color=\"inherit\" href=\"/\">\n      Board game translator\n    </Link>\n    {' '}\n    {new Date().getFullYear()}\n    .\n  </Typography>\n);\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Board game translator\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Page that fulfils all your needs\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container, makeStyles, Typography, CssBaseline, TextField,\n  FormControl, Select, MenuItem,\n  Button,\n  InputLabel,\n} from '@material-ui/core';\nimport { Form, Formik, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { getNoTokenRequest, postRequest } from '../../helper/ApiRequests';\nimport { getUser } from '../../helper/UserService';\n\nconst StyledErrorDiv = styled.div`\n    color: red;`;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    margin: theme.spacing(1, 0),\n    minWidth: 120,\n  },\n  textField: {\n    background: 'white',\n    WebkitBoxShadow: '0 0 0 1000px white inset',\n  },\n}));\n\nconst CreateGame = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [languages, setLanguages] = useState([]);\n\n  useEffect(() => {\n    async function fetchLanguages() {\n      const response = await getNoTokenRequest('/languages');\n      setLanguages(response.data);\n    }\n    fetchLanguages();\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{ title: '', description: '', language: '' }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string().required('Title is required'),\n        description: Yup.string()\n          .required('Description is required')\n          .min(5, 'Description is too short - should be 5 characters minimum')\n          .max(255, 'Description is too long - should be 255 characters maximum'),\n      })}\n      onSubmit={async (values, { setSubmitting, setFieldError }) => {\n        const user = getUser();\n        const request = {\n          title: values.title,\n          description: values.description,\n          languageId: values.language,\n          originalGameId: 0,\n          author: user.name,\n          userId: user.id,\n        };\n\n        const response = await postRequest('/games', request);\n        if (response.status === 'OK') {\n          setSubmitting(false);\n          history.push('/');\n        } else {\n          setFieldError('title', 'This game already exists');\n        }\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Typography component=\"h1\" variant=\"h5\">\n                Create a new board game\n              </Typography>\n            </div>\n            <Form className={classes.form} onSubmit={handleSubmit}>\n              <TextField\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                label=\"Title\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                placeholder=\"Enter game title\"\n                autoFocus\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                inputProps={{ className: classes.textField }}\n                className={classes.textField}\n              />\n              <ErrorMessage component={StyledErrorDiv} name=\"title\" />\n              <TextField\n                type=\"text\"\n                id=\"description\"\n                name=\"description\"\n                label=\"Description\"\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                placeholder=\"Enter game description\"\n                className={classes.textField}\n                inputProps={{ className: classes.textField }}\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <ErrorMessage component={StyledErrorDiv} name=\"description\" />\n              {/* https://material-ui.com/components/autocomplete */}\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"select-language-label\">Language</InputLabel>\n                <Select\n                  id=\"language\"\n                  name=\"language\"\n                  label=\"Language\"\n                  labelId=\"select-language-label\"\n                  className={classes.textField}\n                  inputProps={{ className: classes.textField }}\n                  value={values.language}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  required\n                >\n                  {languages.map((language) => (\n                    <MenuItem key={language.id} value={language.id}>{language.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                className={classes.submit}\n              >\n                Create\n              </Button>\n            </Form>\n          </Container>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default CreateGame;\n","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter, Switch, Route,\n} from 'react-router-dom';\nimport LoginForm from './pages/LoginPage/LoginForm';\nimport RegisterForm from './pages/RegisterPage/RegisterForm';\nimport { getUser } from './helper/UserService';\nimport NavBar from './components/NavBar';\nimport PrivateRoute from './helper/PrivateRoute';\nimport UserList from './pages/Admin/UsersPage/UserList';\nimport Role from './helper/Role';\nimport HomePage from './pages/HomePage/HomePage';\nimport Footer from './components/Footer';\nimport CreateGame from './pages/GamePage/CreateGame';\n\nconst Routes = () => {\n  const [user, setUser] = useState({\n    name: '',\n    roles: '',\n    loggedIn: false,\n  });\n\n  useEffect(() => {\n    setUser(getUser());\n  }, []);\n\n  return (\n    <BrowserRouter basename=\"/BGT-frontend\">\n      <NavBar user={user} />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/register\" component={RegisterForm} />\n        <PrivateRoute\n          path=\"/games/add\"\n          component={CreateGame}\n          user={user}\n          roles={[Role.Admin, Role.Creator]}\n        />\n        <PrivateRoute exact path=\"/users\" component={UserList} user={user} roles={[Role.Admin]} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n};\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Routes from './Routes';\nimport { setUser } from './helper/UserService';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    backgroundColor: '#eaeff1',\n  },\n}));\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setUser();\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <div className={classes.root}>\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}