{"version":3,"sources":["helper/UserService.js","helper/ApiRequests.js","pages/LoginPage/LoginForm.jsx","pages/RegisterPage/RegisterForm.jsx","components/NavBar.jsx","helper/PrivateRoute.jsx","pages/Admin/UsersPage/UserList.jsx","helper/Role.js","components/GameDetailDialog.jsx","helper/HelperFunctions.js","pages/HomePage/HomePage.jsx","components/Footer.jsx","pages/GamePage/CreateGame.jsx","Routes.jsx","App.jsx","index.jsx"],"names":["user","name","roles","loggedIn","removeUser","localStorage","removeItem","setUser","a","getItem","jwtDecode","sub","scopes","getUser","API_ROOT","process","RESPONSE_STATUS","sendRequest","path","method","data","token","req","Request","body","JSON","stringify","headers","Authorization","fetch","response","ok","json","status","sendNoTokenRequest","postNoTokenRequest","getNoTokenRequest","deleteRequest","getRequest","postRequest","useStyles","makeStyles","textField","background","WebkitBoxShadow","StyledDiv","styled","div","StyledAvatar","Avatar","StyledForm","Form","StyledSubmitButton","Button","StyledErrorDiv","LoginForm","history","useHistory","classes","initialValues","username","password","errors","validationSchema","Yup","shape","required","onSubmit","values","setSubmitting","setFieldError","setItem","push","go","props","isSubmitting","handleChange","handleBlur","handleSubmit","Container","component","maxWidth","CssBaseline","Typography","variant","TextField","id","disabled","type","label","margin","fullWidth","placeholder","autoFocus","inputProps","className","value","onChange","onBlur","autoComplete","FormControlLabel","control","Checkbox","color","Grid","container","item","xs","Link","href","RegisterForm","firstName","lastName","email","confirmPassword","min","oneOf","touched","htmlFor","theme","ul","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","grey","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","logout","window","location","NavBar","AppBar","position","elevation","Toolbar","noWrap","routerLink","to","underline","includes","onClick","PrivateRoute","Component","rest","render","split","some","r","indexOf","pathname","UserList","Role","Admin","Creator","Basic","GameDetailDialog","handleDeleteGame","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","down","useEffect","handleClose","size","Dialog","onClose","aria-labelledby","DialogTitle","title","DialogContent","DialogContentText","description","author","language","DialogActions","removeItemFromArrayById","array","removeIndex","map","obj","splice","icon","marginRight","paper","heroButtons","cardGrid","card","height","flexDirection","cardMedia","cardContent","loading","marginLeft","HomePage","originalGames","setOriginalGames","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","fetchOriginalGames","CircularProgress","handleSnackbarOpen","message","fetchDeleteGame","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","game","Grow","in","style","transformOrigin","timeout","sm","md","Card","CardMedia","image","CardContent","gutterBottom","slice","CardActions","Copyright","align","Date","getFullYear","Footer","avatar","secondary","main","form","width","submit","formControl","minWidth","CreateGame","languages","setLanguages","fetchLanguages","max","responseId","request","languageId","originalGameId","userId","multiline","rows","FormControl","InputLabel","Select","labelId","MenuItem","Routes","basename","exact","root","minHeight","App","setLoading","ReactDOM","document","getElementById"],"mappings":"6WAEMA,EAAO,CACXC,KAAM,GACNC,MAAO,GACPC,UAAU,GAWCC,EAAa,WAHxBC,aAAaC,WAAW,SAKxBN,EAAKC,KAAO,GACZD,EAAKE,MAAQ,GACbF,EAAKG,UAAW,GAGLI,EAAO,uCAAG,gCAAAC,EAAA,sDACjBH,aAAaI,QAAQ,WAAW,EACVC,YAAUL,aAAaI,QAAQ,UAA/CE,EADyB,EACzBA,IAAKC,EADoB,EACpBA,OACbZ,EAAKC,KAAOU,EACZX,EAAKE,MAAQU,EACbZ,EAAKG,UAAW,GALG,2CAAH,qDASPU,EAAU,kBAAMb,GChCvBc,EAAWC,4CAEJC,EACP,KADOA,EAEI,gBAFJA,EAGG,e,SAGDC,E,kFAAf,WAA2BC,EAAMC,EAAQC,GAAzC,mBAAAZ,EAAA,sEAEUa,EAAQhB,aAAaI,QAAQ,SAC7Ba,EAAM,IAAIC,QAAQT,EAAWI,EAAM,CACvCC,SACAK,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYP,MARjC,SAW2BQ,MAAMP,GAXjC,YAWUQ,EAXV,QAYiBC,GAZjB,sCAcyBf,EAdzB,UAcyDc,EAASE,OAdlE,8CAciBC,OAdjB,KAc6Cb,KAd7C,kEAgBe,CAAEa,OAAQjB,IAhBzB,yDAmBa,CAAEiB,OAAQjB,IAnBvB,mFAsBW,CAAEiB,OAAQjB,IAtBrB,kE,+BA0BekB,E,kFAAf,WAAkChB,EAAMC,EAAQC,GAAhD,iBAAAZ,EAAA,sEAEUc,EAAM,IAAIC,QAAQT,EAAWI,EAAM,CACvCC,SACAK,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBANxB,SAS2BE,MAAMP,GATjC,YASUQ,EATV,QAUiBC,GAVjB,sCAYyBf,EAZzB,UAYyDc,EAASE,OAZlE,8CAYiBC,OAZjB,KAY6Cb,KAZ7C,kEAce,CAAEa,OAAQjB,IAdzB,yDAiBa,CAAEiB,OAAQjB,IAjBvB,mFAoBW,CAAEiB,OAAQjB,IApBrB,kE,sBAwBO,SAAemB,EAAtB,oC,4CAAO,WAAkCjB,EAAME,GAAxC,SAAAZ,EAAA,+EACE0B,EAAmBhB,EAAM,OAAQE,IADnC,4C,sBAIA,SAAegB,EAAtB,kC,4CAAO,WAAiClB,GAAjC,SAAAV,EAAA,+EACE0B,EAAmBhB,EAAM,QAD3B,4C,sBAIA,SAAemB,EAAtB,kC,4CAAO,WAA6BnB,GAA7B,SAAAV,EAAA,+EACES,EAAYC,EAAM,WADpB,4C,sBAQA,SAAeoB,EAAtB,kC,4CAAO,WAA0BpB,GAA1B,SAAAV,EAAA,+EACES,EAAYC,EAAM,QADpB,4C,sBAIA,SAAeqB,EAAtB,oC,4CAAO,WAA2BrB,EAAME,GAAjC,SAAAZ,EAAA,+EACES,EAAYC,EAAM,OAAQE,IAD5B,4C,glBCtDP,IAAMoB,GAAYC,aAAW,iBAAO,CAClCC,UAAW,CACTC,WAAY,QACZC,gBAAiB,gCAIfC,GAAYC,IAAOC,IAAV,MAOTC,GAAeF,YAAOG,IAAPH,CAAH,MAKZI,GAAaJ,YAAOK,IAAPL,CAAH,MAKVM,GAAqBN,YAAOO,IAAPP,CAAH,MAIlBQ,GAAiBR,IAAOC,IAAV,KA2HLQ,GAxHG,WAChB,IAAMC,EAAUC,cACVC,EAAUlB,KAEhB,OACE,cAAC,IAAD,CACEmB,cAAe,CAAEC,SAAU,GAAIC,SAAU,GAAIC,OAAQ,IACrDC,iBAAkBC,MAAaC,MAAM,CACnCL,SAAUI,MAAaE,SAAS,wBAChCL,SAAUG,MACPE,SAAS,2BAIdC,SAAQ,uCAAE,WAAOC,EAAP,sBAAA5D,EAAA,6DAAiB6D,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,cAAhC,SACenC,EAAmB,gBAAiBiC,GADnD,OAEgB,QADlBtC,EADE,QAEKG,QF/DIZ,EEgENS,EAASV,KAAKC,MF/D/BhB,aAAakE,QAAQ,QAASlD,GEgEtBd,IACA8D,GAAc,GACdb,EAAQgB,KAAK,KACbhB,EAAQiB,GAAG,IAEXH,EAAc,SAAU,sCATlB,iCF7DQ,IAACjD,IE6DT,OAAF,wDATV,SAuBG,SAACqD,GAAW,IAETN,EAKEM,EALFN,OACAO,EAIED,EAJFC,aACAC,EAGEF,EAHFE,aACAC,EAEEH,EAFFG,WACAC,EACEJ,EADFI,aAEF,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,eAACrC,GAAD,WACE,cAACG,GAAD,UACE,cAAC,IAAD,MAEF,cAACmC,EAAA,EAAD,CAAYH,UAAU,KAAKI,QAAQ,KAAnC,qBAGA,eAAClC,GAAD,CAAYiB,SAAUW,EAAtB,UACE,cAACO,EAAA,EAAD,CACEC,GAAG,SACHrF,KAAK,SACLsF,UAAQ,EACRC,KAAK,WAEP,cAAC,IAAD,CAAcR,UAAW1B,GAAgBrD,KAAK,WAC9C,cAACoF,EAAA,EAAD,CACEG,KAAK,OACLF,GAAG,WACHrF,KAAK,WACLwF,MAAM,WACNL,QAAQ,WACRM,OAAO,SACPC,WAAS,EACTC,YAAY,sBACZC,WAAS,EACTC,WAAY,CAAEC,UAAWrC,EAAQhB,WACjCsD,MAAO5B,EAAOR,SACdqC,SAAUrB,EACVsB,OAAQrB,IAEV,cAAC,IAAD,CAAcG,UAAW1B,GAAgBrD,KAAK,aAC9C,cAACoF,EAAA,EAAD,CACEC,GAAG,WACHrF,KAAK,WACLuF,KAAK,WACLI,YAAY,sBACZR,QAAQ,WACRM,OAAO,SACPC,WAAS,EACTF,MAAM,WACNU,aAAa,mBACbL,WAAY,CAAEC,UAAWrC,EAAQhB,WACjCsD,MAAO5B,EAAOP,SACdoC,SAAUrB,EACVsB,OAAQrB,IAEV,cAAC,IAAD,CAAcG,UAAW1B,GAAgBrD,KAAK,aAC9C,cAACmG,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUN,MAAM,WAAWO,MAAM,YAC1Cd,MAAM,gBAER,cAACrC,GAAD,CACEoC,KAAK,SACLG,WAAS,EACTP,QAAQ,YACRmB,MAAM,UACNhB,SAAUZ,EALZ,qBASA,eAAC6B,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAMC,KAAK,IAAIzB,QAAQ,QAAvB,gCAIF,cAACoB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACE,EAAA,EAAD,CAAMC,KAAK,IAAIzB,QAAQ,QAAvB,8DC/DL0B,GA5FM,kBACnB,cAAC,IAAD,CACEnD,cAAe,CACboD,UAAW,GACXC,SAAU,GACVC,MAAO,GACPpD,SAAU,GACVqD,gBAAiB,IAEnBnD,iBAAkBC,MAAaC,MAAM,CACnC8C,UAAW/C,MACRE,SAAS,0BACZ8C,SAAUhD,MACPE,SAAS,yBACZ+C,MAAOjD,MACJiD,MAAM,oBACN/C,SAAS,qBACZL,SAAUG,MACPmD,IAAI,EAAG,0CACPjD,SAAS,wBACZgD,gBAAiBlD,MACdoD,MAAM,CAACpD,IAAQ,YAAa,MAAO,wBACnCE,SAAS,kCArBhB,SAwBG,SAACQ,GAAW,IAET2C,EAIE3C,EAJF2C,QACAvD,EAGEY,EAHFZ,OACAa,EAEED,EAFFC,aACAG,EACEJ,EADFI,aAEF,OACE,eAAC,IAAD,CAAMX,SAAUW,EAAhB,UACE,qBAAKiB,UAAU,aAAf,SACE,wBAAOuB,QAAQ,YAAf,uBAEG,IACD,cAAC,IAAD,CACErH,KAAK,YACLuF,KAAK,OACLI,YAAY,mBACZG,UAAS,sBAAiBjC,EAAOiD,WAAaM,EAAQN,UAAY,cAAgB,MAEpF,cAAC,IAAD,CAAc9G,KAAK,YAAY+E,UAAU,MAAMe,UAAU,0BAI7D,qBAAKA,UAAU,aAAf,SACE,wBAAOuB,QAAQ,WAAf,sBAEG,IACD,cAAC,IAAD,CAAOrH,KAAK,WAAWuF,KAAK,OAAOO,UAAS,sBAAiBjC,EAAOkD,UAAYK,EAAQL,SAAW,cAAgB,MACnH,cAAC,IAAD,CAAc/G,KAAK,WAAW+E,UAAU,MAAMe,UAAU,0BAI5D,qBAAKA,UAAU,aAAf,SACE,wBAAOuB,QAAQ,QAAf,kBAEG,IACD,cAAC,IAAD,CAAOrH,KAAK,QAAQuF,KAAK,OAAOO,UAAS,sBAAiBjC,EAAOmD,OAASI,EAAQJ,MAAQ,cAAgB,MAC1G,cAAC,IAAD,CAAchH,KAAK,QAAQ+E,UAAU,MAAMe,UAAU,0BAIzD,qBAAKA,UAAU,aAAf,SACE,wBAAOuB,QAAQ,WAAf,qBAEG,IACD,cAAC,IAAD,CAAOrH,KAAK,WAAWuF,KAAK,WAAWO,UAAS,sBAAiBjC,EAAOD,UAAYwD,EAAQxD,SAAW,cAAgB,MACvH,cAAC,IAAD,CAAc5D,KAAK,WAAW+E,UAAU,MAAMe,UAAU,0BAI5D,qBAAKA,UAAU,aAAf,SACE,wBAAOuB,QAAQ,kBAAf,6BAEG,IACD,cAAC,IAAD,CAAOrH,KAAK,kBAAkBuF,KAAK,WAAWO,UAAS,sBAAiBjC,EAAOoD,iBAAmBG,EAAQH,gBAAkB,cAAgB,MAC5I,cAAC,IAAD,CAAcjH,KAAK,kBAAkB+E,UAAU,MAAMe,UAAU,0BAInE,qBAAKA,UAAU,aAAf,SACE,wBAAQP,KAAK,SAASD,SAAUZ,EAAcoB,UAAU,uBAAxD,+B,8BClFNvD,GAAYC,aAAW,SAAC8E,GAAD,MAAY,CACvC,UAAW,CACTC,GAAI,CACF9B,OAAQ,EACR+B,QAAS,EACTC,UAAW,SAGfC,OAAQ,CACNC,aAAa,aAAD,OAAeL,EAAMM,QAAQC,UAE3CC,QAAS,CACPC,SAAU,QAEZC,aAAc,CACZC,SAAU,GAEZC,KAAM,CACJzC,OAAQ6B,EAAMa,QAAQ,EAAG,MAE3BC,YAAa,CACXZ,QAASF,EAAMa,QAAQ,EAAG,EAAG,IAE/BE,WAAY,CACVC,gBAC2B,UAAvBhB,EAAMM,QAAQrC,KAAmB+B,EAAMM,QAAQW,KAAK,KAAOjB,EAAMM,QAAQW,KAAK,MAEpFC,YAAa,CACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZC,aAActB,EAAMa,QAAQ,IAE9BU,OAAO,cACLC,UAAU,aAAD,OAAexB,EAAMM,QAAQC,SACtCkB,UAAWzB,EAAMa,QAAQ,GACzBa,WAAY1B,EAAMa,QAAQ,GAC1Bc,cAAe3B,EAAMa,QAAQ,IAC5Bb,EAAM4B,YAAYC,GAAG,MAAQ,CAC5BH,WAAY1B,EAAMa,QAAQ,GAC1Bc,cAAe3B,EAAMa,QAAQ,SAK7BiB,GAAS,WACbjJ,IACAkJ,OAAOC,SAAS1C,KAAO,iBAqEV2C,GAlEA,SAAC,GAAc,IAAZxJ,EAAW,EAAXA,KACV0D,EAAUlB,KAChB,OACE,qCACE,cAAC0C,EAAA,EAAD,IACA,cAACuE,GAAA,EAAD,CAAQC,SAAS,SAASC,UAAW,EAAG5D,UAAWrC,EAAQiE,OAA3D,SACE,eAACiC,GAAA,EAAD,CAAS7D,UAAWrC,EAAQqE,QAA5B,UACE,cAAC5C,EAAA,EAAD,CAAYC,QAAQ,KAAKmB,MAAM,UAAUsD,QAAM,EAAC9D,UAAWrC,EAAQuE,aAAnE,SACE,cAACrB,EAAA,EAAD,CAAM5B,UAAW8E,IAAYC,GAAG,IAAIxD,MAAM,UAAUnB,QAAQ,UAAU4E,UAAU,OAAhF,mBAIF,+BAUIhK,EAAKE,MAAM+J,SAAS,YAAcjK,EAAKE,MAAM+J,SAAS,WACxD,cAACrD,EAAA,EAAD,CACExB,QAAQ,SACRmB,MAAM,UACNvB,UAAW8E,IACXC,GAAG,aACHhE,UAAWrC,EAAQyE,KALrB,yBAmBAnI,EAAKG,UACL,cAACkD,EAAA,EAAD,CAAQ2B,UAAW8E,IAAYC,GAAG,SAASxD,MAAM,UAAUnB,QAAQ,WAAWW,UAAWrC,EAAQyE,KAAjG,mBAIDnI,EAAKG,UACJ,cAACkD,EAAA,EAAD,CAAQ6G,QAASb,GAAQ9C,MAAM,UAAUnB,QAAQ,WAAWW,UAAWrC,EAAQyE,KAA/E,6B,mBC5EGgC,GA1BM,SAAC,GAAD,IACRC,EADQ,EACnBpF,UAAsBhF,EADH,EACGA,KAAME,EADT,EACSA,MAAUmK,EADnB,oDAGnB,cAAC,IAAD,6BACMA,GADN,IAEEC,OAAQ,SAAC5F,GACP,OAAK1E,EAAKG,UAGLH,EAAKE,MAAMqK,MAAM,KAAKC,MAAK,SAACC,GAAD,OAAOvK,EAAMwK,QAAQD,IAAM,KAGpD,cAACL,EAAD,gBAAe1F,IALb,cAAC,IAAD,CAAUqF,GAAI,CAAEY,SAAU,YCN1BC,GAJE,kBACf,6CCGaC,GANF,CACXC,MAAO,QACPC,QAAS,UACTC,MAAO,S,2ICsFMC,GA7EU,SAAC,GAAgC,IAA9BvE,EAA6B,EAA7BA,KAAMwE,EAAuB,EAAvBA,iBAAuB,EAC/BC,oBAAS,GADsB,mBAChDC,EADgD,KAC1CC,EAD0C,KAEjD9D,EAAQ+D,eACRC,EAAaC,aAAcjE,EAAM4B,YAAYsC,KAAK,OAHD,EAI/BN,mBAAS,CAC/BlL,KAAM,GACNC,MAAO,GACPC,UAAU,IAP2C,mBAIhDH,EAJgD,KAI1CO,EAJ0C,KAUvDmL,qBAAU,WACRnL,EAAQM,OACP,IAEH,IAIM8K,EAAc,WAClBN,GAAQ,IAGV,OACE,qCACE,cAAChI,EAAA,EAAD,CAAQuI,KAAK,QAAQrF,MAAM,UAAU2D,QAVjB,WACtBmB,GAAQ,IASN,qBAGA,eAACQ,GAAA,EAAD,CACEN,WAAYA,EACZH,KAAMA,EACNU,QAASH,EACTI,kBAAgB,0BAJlB,UAME,cAACC,GAAA,EAAD,CAAa1G,GAAG,0BAAhB,SAA2CoB,EAAKuF,QAChD,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,0BAEG,IACAzF,EAAK0F,eAER,eAACD,GAAA,EAAD,qBAEG,IACAzF,EAAK2F,UAER,eAACF,GAAA,EAAD,uBAEG,IACAzF,EAAK4F,eAGV,eAACC,GAAA,EAAD,YACIvM,EAAKE,MAAM+J,SAAS,YAAcjK,EAAKE,MAAM+J,SAAS,WACxD,cAAC5G,EAAA,EAAD,CAAQ6G,QAAS,WAAQgB,EAAiBxE,EAAKpB,IAAKqG,KAAkBpF,MAAM,YAA5E,oBAIA,cAAClD,EAAA,EAAD,CAAQ6G,QAASyB,EAAapF,MAAM,UAAUV,WAAS,EAAvD,6BC5DK2G,GATiB,SAACC,EAAOnH,GACtC,IAAMoH,EAAcD,EAAME,KAAI,SAACC,GAAD,OAASA,EAAItH,MAAIoF,QAAQpF,GACvD,OAAIoH,GAAe,GACjBD,EAAMI,OAAOH,EAAa,GACnBD,GAEFA,GCMHjK,GAAYC,aAAW,SAAC8E,GAAD,MAAY,CACvCuF,KAAM,CACJC,YAAaxF,EAAMa,QAAQ,IAE7BC,YAAa,CACXE,gBAAiBhB,EAAMM,QAAQlF,WAAWqK,MAC1CvF,QAASF,EAAMa,QAAQ,EAAG,EAAG,IAE/B6E,YAAa,CACXjE,UAAWzB,EAAMa,QAAQ,IAE3B8E,SAAU,CACRjE,WAAY1B,EAAMa,QAAQ,GAC1Bc,cAAe3B,EAAMa,QAAQ,IAE/B+E,KAAM,CACJC,OAAQ,OACR1E,QAAS,OACT2E,cAAe,UAEjBC,UAAW,CACTrE,WAAY,UAEdsE,YAAa,CACXrF,SAAU,GAEZsF,QAAS,CACP9E,QAAS,OACT,YAAa,CACX+E,WAAYlG,EAAMa,QAAQ,SAmIjBsF,GA9HE,WACf,IAAMhK,EAAUlB,KADK,EAEqB2I,mBAAS,IAF9B,mBAEdwC,EAFc,KAECC,EAFD,OAGmBzC,oBAAS,GAH5B,mBAGd0C,EAHc,KAGAC,EAHA,OAIyB3C,mBAAS,IAJlC,mBAId4C,EAJc,KAIGC,EAJH,KAcrB,GARAtC,qBAAU,WAAM,4CACd,4BAAAlL,EAAA,sEACyB4B,EAAkB,mBAD3C,OACQN,EADR,OAEE8L,EAAiB9L,EAASV,MAF5B,4CADc,uBAAC,WAAD,wBAKd6M,KACC,KAEEN,EACH,OACE,qBAAK5H,UAAWrC,EAAQ8J,QAAxB,SACE,cAACU,GAAA,EAAD,MAKN,IAIMC,EAAqB,SAACC,GAC1BJ,EAAmBI,GACnBN,GAAgB,IAGZ5C,EAAmB,SAAC5F,GAAO,4CAC/B,sBAAA9E,EAAA,sEACyB6B,EAAc,UAAD,OAAWiD,IADjD,OAE0B,OAF1B,OAEerD,QACX2L,EAAiBpB,GAAwBmB,EAAerI,IACxD6I,EAAmB,kCAEnBA,EAAmB,qEANvB,4CAD+B,uBAAC,WAAD,wBAU/BE,IAGF,OACE,qCACE,cAACnJ,EAAA,EAAD,IACA,+BA4BE,eAACH,EAAA,EAAD,CAAWgB,UAAWrC,EAAQwJ,SAAUjI,SAAS,KAAjD,UACE,cAACqJ,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,iBAAkB,IAClBtD,KAAMyC,EACN/B,QA1DkB,WAC1BgC,GAAgB,IA0DRM,QAASL,IAEX,cAACvH,EAAA,EAAD,CAAMC,WAAS,EAAC2B,QAAS,EAAzB,SACGuF,EAAchB,KAAI,SAACgC,GAAD,OACjB,cAACC,GAAA,EAAD,2BAEEC,IAAE,EACFC,MAAO,CAAEC,gBAAiB,UACrB,CAAEC,QAAS,MAJlB,aAME,cAACxI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIsI,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACC,GAAA,EAAD,CAAMpJ,UAAWrC,EAAQyJ,KAAzB,UACE,cAACiC,GAAA,EAAD,CACErJ,UAAWrC,EAAQ4J,UACnB+B,MAAM,oDACNpD,MAAM,gBAER,eAACqD,GAAA,EAAD,CAAavJ,UAAWrC,EAAQ6J,YAAhC,UACE,cAACpI,EAAA,EAAD,CAAYoK,cAAY,EAACnK,QAAQ,KAAKJ,UAAU,KAAhD,SACG2J,EAAK1C,QAER,cAAC9G,EAAA,EAAD,UACGwJ,EAAKvC,YAAYoD,MAAM,EAAG,SAG/B,cAACC,GAAA,EAAD,UACE,cAAC,GAAD,CAAkB/I,KAAMiI,EAAMzD,iBAAkBA,aArBjDyD,EAAKrJ,kBC/HpB9C,GAAYC,aAAW,SAAC8E,GAAD,MAAY,CACvC,UAAW,CACTC,GAAI,CACF9B,OAAQ,EACR+B,QAAS,EACTC,UAAW,SAGfoB,OAAQ,CACNP,gBAAiBhB,EAAMM,QAAQlF,WAAWqK,MAC1ChE,UAAW,OACXvB,QAASF,EAAMa,QAAQ,EAAG,QAIxBsH,GAAY,kBAChB,eAACvK,EAAA,EAAD,CAAYC,QAAQ,QAAQmB,MAAM,gBAAgBoJ,MAAM,SAAxD,UACG,kBACD,cAAC/I,EAAA,EAAD,CAAML,MAAM,UAAUM,KAAK,IAA3B,mCAGC,KACA,IAAI+I,MAAOC,cANd,QA4BaC,GAjBA,WACb,IAAMpM,EAAUlB,KAChB,OACE,wBAAQuD,UAAWrC,EAAQoF,OAA3B,SACE,eAAC/D,EAAA,EAAD,CAAWE,SAAS,KAApB,UACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKuK,MAAM,SAASJ,cAAY,EAApD,mCAGA,cAACpK,EAAA,EAAD,CAAYC,QAAQ,YAAYuK,MAAM,SAASpJ,MAAM,gBAAgBvB,UAAU,IAA/E,8CAGA,cAAC,GAAD,U,gIC7BR,IAAM1B,GAAiBR,IAAOC,IAAV,MAGdP,GAAYC,aAAW,SAAC8E,GAAD,MAAY,CACvCyF,MAAO,CACLhE,UAAWzB,EAAMa,QAAQ,GACzBM,QAAS,OACT2E,cAAe,SACfzE,WAAY,UAEdmH,OAAQ,CACNrK,OAAQ6B,EAAMa,QAAQ,GACtBG,gBAAiBhB,EAAMM,QAAQmI,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPnH,UAAWzB,EAAMa,QAAQ,IAE3BgI,OAAQ,CACN1K,OAAQ6B,EAAMa,QAAQ,EAAG,EAAG,IAE9BiI,YAAa,CACX3K,OAAQ6B,EAAMa,QAAQ,EAAG,GACzBkI,SAAU,KAEZ5N,UAAW,CACTC,WAAY,QACZC,gBAAiB,gCA0IN2N,GAtII,WACjB,IAAM/M,EAAUC,cACVC,EAAUlB,KAFO,EAGW2I,mBAAS,IAHpB,mBAGhBqF,EAHgB,KAGLC,EAHK,KAavB,OARA/E,qBAAU,WAAM,4CACd,4BAAAlL,EAAA,sEACyB4B,EAAkB,cAD3C,OACQN,EADR,OAEE2O,EAAa3O,EAASV,MAFxB,4CADc,uBAAC,WAAD,wBAKdsP,KACC,IAGD,cAAC,IAAD,CACE/M,cAAe,CAAEsI,MAAO,GAAIG,YAAa,GAAIE,SAAU,IACvDvI,iBAAkBC,MAAaC,MAAM,CACnCgI,MAAOjI,MAAaE,SAAS,qBAC7BkI,YAAapI,MACVE,SAAS,2BACTiD,IAAI,EAAG,6DACPwJ,IAAI,IAAK,gEAEdxM,SAAQ,uCAAE,WAAOC,EAAP,0BAAA5D,EAAA,6DAAiB6D,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,cAClCtE,EAAOa,IADL,SAEiByB,EAAW,UAAD,OAAWtC,EAAKC,KAAhB,QAF3B,cAEF2Q,EAFE,OAGFC,EAAU,CACd5E,MAAO7H,EAAO6H,MACdG,YAAahI,EAAOgI,YACpB0E,WAAY1M,EAAOkI,SACnByE,eAAgB,EAChB1E,OAAQrM,EAAKC,KACb+Q,OAAQJ,EAAWxP,KAAKkE,IATlB,SAYe/C,EAAY,SAAUsO,GAZrC,OAagB,OAbhB,OAaK5O,QACXoC,GAAc,GACdb,EAAQgB,KAAK,MAEbF,EAAc,QAAS,4BAjBjB,4CAAF,wDATV,SA8BG,SAACI,GAAW,IAETN,EAKEM,EALFN,OACAO,EAIED,EAJFC,aACAC,EAGEF,EAHFE,aACAC,EAEEH,EAFFG,WACAC,EACEJ,EADFI,aAEF,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,qBAAKa,UAAWrC,EAAQsJ,MAAxB,SACE,cAAC7H,EAAA,EAAD,CAAYH,UAAU,KAAKI,QAAQ,KAAnC,uCAIF,eAAC,IAAD,CAAMW,UAAWrC,EAAQwM,KAAM/L,SAAUW,EAAzC,UACE,cAACO,EAAA,EAAD,CACEG,KAAK,OACLF,GAAG,QACHrF,KAAK,QACLwF,MAAM,QACNL,QAAQ,WACRM,OAAO,SACPC,WAAS,EACTC,YAAY,mBACZC,WAAS,EACTG,MAAO5B,EAAO6H,MACdhG,SAAUrB,EACVsB,OAAQrB,EACRiB,WAAY,CAAEC,UAAWrC,EAAQhB,WACjCqD,UAAWrC,EAAQhB,YAErB,cAAC,IAAD,CAAcsC,UAAW1B,GAAgBrD,KAAK,UAC9C,cAACoF,EAAA,EAAD,CACEG,KAAK,OACLF,GAAG,cACHrF,KAAK,cACLwF,MAAM,cACNwL,WAAS,EACTC,KAAM,EACN9L,QAAQ,WACRM,OAAO,SACPC,WAAS,EACTC,YAAY,yBACZG,UAAWrC,EAAQhB,UACnBoD,WAAY,CAAEC,UAAWrC,EAAQhB,WACjCsD,MAAO5B,EAAOgI,YACdnG,SAAUrB,EACVsB,OAAQrB,IAEV,cAAC,IAAD,CAAcG,UAAW1B,GAAgBrD,KAAK,gBAE9C,eAACkR,GAAA,EAAD,CAAa/L,QAAQ,WAAWW,UAAWrC,EAAQ2M,YAAnD,UACE,cAACe,GAAA,EAAD,CAAY9L,GAAG,wBAAf,sBACA,cAAC+L,GAAA,EAAD,CACE/L,GAAG,WACHrF,KAAK,WACLwF,MAAM,WACN6L,QAAQ,wBACRvL,UAAWrC,EAAQhB,UACnBoD,WAAY,CAAEC,UAAWrC,EAAQhB,WACjCsD,MAAO5B,EAAOkI,SACdrG,SAAUrB,EACVsB,OAAQrB,EACRX,UAAQ,EAVV,SAYGsM,EAAU7D,KAAI,SAACL,GAAD,OACb,cAACiF,GAAA,EAAD,CAA4BvL,MAAOsG,EAAShH,GAA5C,SAAiDgH,EAASrM,MAA3CqM,EAAShH,YAI9B,cAACjC,EAAA,EAAD,CACEmC,KAAK,SACLG,WAAS,EACTP,QAAQ,YACRmB,MAAM,UACNhB,SAAUZ,EACVoB,UAAWrC,EAAQ0M,OANrB,8BCpHCoB,GA9BA,WAAO,IAAD,EACKrG,mBAAS,CAC/BlL,KAAM,GACNC,MAAO,GACPC,UAAU,IAJO,mBACZH,EADY,KACNO,EADM,KAWnB,OAJAmL,qBAAU,WACRnL,EAAQM,OACP,IAGD,eAAC,IAAD,CAAe4Q,SAAS,gBAAxB,UACE,cAAC,GAAD,CAAQzR,KAAMA,IACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0R,OAAK,EAACxQ,KAAK,IAAI8D,UAAW0I,KACjC,cAAC,IAAD,CAAOxM,KAAK,SAAS8D,UAAWzB,KAChC,cAAC,IAAD,CAAOrC,KAAK,YAAY8D,UAAW8B,KACnC,cAAC,GAAD,CACE5F,KAAK,aACL8D,UAAWuL,GACXvQ,KAAMA,EACNE,MAAO,CAAC2K,GAAKC,MAAOD,GAAKE,WAE3B,cAAC,GAAD,CAAc2G,OAAK,EAACxQ,KAAK,SAAS8D,UAAW4F,GAAU5K,KAAMA,EAAME,MAAO,CAAC2K,GAAKC,YAElF,cAAC,GAAD,QCpCAtI,GAAYC,aAAW,iBAAO,CAClCkP,KAAM,CACJjJ,QAAS,OACT2E,cAAe,SACfuE,UAAW,QACXrJ,gBAAiB,eAuBNsJ,GAnBH,WAAO,IAAD,EACc1G,oBAAS,GADvB,mBACTqC,EADS,KACAsE,EADA,KAEVpO,EAAUlB,KAOhB,OALAkJ,qBAAU,WACRnL,IACAuR,GAAW,KACV,IAECtE,EACK,6CAGP,qBAAKzH,UAAWrC,EAAQiO,KAAxB,SACE,cAAC,GAAD,OCxBNI,IAASzH,OACP,cAAC,GAAD,IACA0H,SAASC,eAAe,W","file":"static/js/main.a2ff0121.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode';\n\nconst user = {\n  name: '',\n  roles: '',\n  loggedIn: false,\n};\n\nexport const setToken = (token) => {\n  localStorage.setItem('token', token);\n};\n\nexport const removeToken = () => {\n  localStorage.removeItem('token');\n};\n\nexport const removeUser = () => {\n  removeToken();\n  user.name = '';\n  user.roles = '';\n  user.loggedIn = false;\n};\n\nexport const setUser = async () => {\n  if (localStorage.getItem('token')) {\n    const { sub, scopes } = jwtDecode(localStorage.getItem('token'));\n    user.name = sub;\n    user.roles = scopes;\n    user.loggedIn = true;\n  }\n};\n\nexport const getUser = () => user;\n// rafce\n","const API_ROOT = process.env.REACT_APP_BE_BASE_URL;\n\nexport const RESPONSE_STATUS = {\n  OK: 'OK',\n  NO_CONNECTION: 'NO_CONNECTION',\n  BAD_RESPONSE: 'BAD_RESPONSE',\n};\n\nasync function sendRequest(path, method, data) {\n  try {\n    const token = localStorage.getItem('token');\n    const req = new Request(API_ROOT + path, {\n      method,\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const response = await fetch(req);\n    if (response.ok) {\n      try {\n        return { status: RESPONSE_STATUS.OK, data: await response.json() };\n      } catch (d) {\n        return { status: RESPONSE_STATUS.OK };\n      }\n    } else {\n      return { status: RESPONSE_STATUS.BAD_RESPONSE };\n    }\n  } catch (e) {\n    return { status: RESPONSE_STATUS.NO_CONNECTION };\n  }\n}\n\nasync function sendNoTokenRequest(path, method, data) {\n  try {\n    const req = new Request(API_ROOT + path, {\n      method,\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const response = await fetch(req);\n    if (response.ok) {\n      try {\n        return { status: RESPONSE_STATUS.OK, data: await response.json() };\n      } catch (d) {\n        return { status: RESPONSE_STATUS.OK };\n      }\n    } else {\n      return { status: RESPONSE_STATUS.BAD_RESPONSE };\n    }\n  } catch (e) {\n    return { status: RESPONSE_STATUS.NO_CONNECTION };\n  }\n}\n\nexport async function postNoTokenRequest(path, data) {\n  return sendNoTokenRequest(path, 'POST', data);\n}\n\nexport async function getNoTokenRequest(path) {\n  return sendNoTokenRequest(path, 'GET');\n}\n\nexport async function deleteRequest(path) {\n  return sendRequest(path, 'DELETE');\n}\n\nexport async function putRequest(path, data) {\n  return sendRequest(path, 'PUT', data);\n}\n\nexport async function getRequest(path) {\n  return sendRequest(path, 'GET');\n}\n\nexport async function postRequest(path, data) {\n  return sendRequest(path, 'POST', data);\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport {\n  Formik,\n  Form, ErrorMessage,\n} from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core';\nimport { setToken, setUser } from '../../helper/UserService';\nimport { postNoTokenRequest } from '../../helper/ApiRequests';\n\nconst useStyles = makeStyles(() => ({\n  textField: {\n    background: 'white',\n    WebkitBoxShadow: '0 0 0 1000px white inset',\n  },\n}));\n\nconst StyledDiv = styled.div`\n  margin-top: 64px;\n  display:flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin: 8px;\n  background-color: red;\n`;\n\nconst StyledForm = styled(Form)`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  margin: 24px 0 16px;\n`;\n\nconst StyledErrorDiv = styled.div`\n    color: red;`;\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <Formik\n      initialValues={{ username: '', password: '', errors: '' }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string().required('Username is required'),\n        password: Yup.string()\n          .required('No password provided.'),\n      // .min(8, 'Password is too short - should be 8 chars minimum.')\n      // .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n      })}\n      onSubmit={async (values, { setSubmitting, setFieldError }) => {\n        const response = await postNoTokenRequest('/authenticate', values);\n        if (response.status === 'OK') {\n          setToken(response.data.token);\n          setUser();\n          setSubmitting(false);\n          history.push('/');\n          history.go(0);\n        } else {\n          setFieldError('errors', 'Username or password is incorrect!');\n        // setFieldError('username', 'error');\n        }\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <StyledDiv>\n              <StyledAvatar>\n                <LockOutlinedIcon />\n              </StyledAvatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n              </Typography>\n              <StyledForm onSubmit={handleSubmit}>\n                <TextField\n                  id=\"errors\"\n                  name=\"errors\"\n                  disabled\n                  type=\"hidden\"\n                />\n                <ErrorMessage component={StyledErrorDiv} name=\"errors\" />\n                <TextField\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  label=\"Username\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  placeholder=\"Enter your username\"\n                  autoFocus\n                  inputProps={{ className: classes.textField }}\n                  value={values.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                <ErrorMessage component={StyledErrorDiv} name=\"username\" />\n                <TextField\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  label=\"Password\"\n                  autoComplete=\"current-password\"\n                  inputProps={{ className: classes.textField }}\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                <ErrorMessage component={StyledErrorDiv} name=\"password\" />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                <StyledSubmitButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Sign In\n                </StyledSubmitButton>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link href=\"#\" variant=\"body2\">\n                      Don&apos;t have an account? Sign Up\n                    </Link>\n                  </Grid>\n                </Grid>\n              </StyledForm>\n            </StyledDiv>\n          </Container>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Formik, Field, Form, ErrorMessage,\n} from 'formik';\nimport * as Yup from 'yup';\n\nconst RegisterForm = () => (\n  <Formik\n    initialValues={{\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    }}\n    validationSchema={Yup.object().shape({\n      firstName: Yup.string()\n        .required('First Name is required'),\n      lastName: Yup.string()\n        .required('Last Name is required'),\n      email: Yup.string()\n        .email('Email is invalid')\n        .required('Email is required'),\n      password: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Password is required'),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm Password is required'),\n    })}\n  >\n    {(props) => {\n      const {\n        touched,\n        errors,\n        isSubmitting,\n        handleSubmit,\n      } = props;\n      return (\n        <Form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">\n              First Name\n              {' '}\n              <Field\n                name=\"firstName\"\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                className={`form-control${errors.firstName && touched.firstName ? ' is-invalid' : ''}`}\n              />\n              <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">\n              Last Name\n              {' '}\n              <Field name=\"lastName\" type=\"text\" className={`form-control${errors.lastName && touched.lastName ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">\n              Email\n              {' '}\n              <Field name=\"email\" type=\"text\" className={`form-control${errors.email && touched.email ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">\n              Password\n              {' '}\n              <Field name=\"password\" type=\"password\" className={`form-control${errors.password && touched.password ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">\n              Confirm Password\n              {' '}\n              <Field name=\"confirmPassword\" type=\"password\" className={`form-control${errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''}`} />\n              <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n            </label>\n\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary mr-2\">Register</button>\n          </div>\n        </Form>\n      );\n    }}\n  </Formik>\n);\nexport default RegisterForm;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link as routerLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, CssBaseline, Toolbar, Typography, Button, makeStyles, Link,\n} from '@material-ui/core';\nimport { removeUser } from '../helper/UserService';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst logout = () => {\n  removeUser();\n  window.location.href = '/BGT-frontend';\n};\n\nconst NavBar = ({ user }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n            <Link component={routerLink} to=\"/\" color=\"inherit\" variant=\"inherit\" underline=\"none\">\n              BGT\n            </Link>\n          </Typography>\n          <nav>\n            {/* {user.name}\n            {' '}\n            {user.roles}\n            {' '}\n            {String(user.loggedIn)} */}\n            {/* <Link variant=\"button\" color=\"textPrimary\" component={routerLink} to=\"/\"\n            className={classes.link}>\n              Home\n            </Link> */}\n            {(user.roles.includes('CREATOR') || user.roles.includes('ADMIN')) && (\n            <Link\n              variant=\"button\"\n              color=\"inherit\"\n              component={routerLink}\n              to=\"/games/add\"\n              className={classes.link}\n            >\n              Add game\n            </Link>\n            )}\n            {/* <Link variant=\"button\" color=\"textPrimary\" className={classes.link}>\n              {user.name}\n            </Link> */}\n            {/* {!user.loggedIn && (\n          <Link variant=\"button\" color=\"textPrimary\" href=\"/\">\n            Login\n          </Link>\n          )} */}\n          </nav>\n          {!user.loggedIn && (\n            <Button component={routerLink} to=\"/login\" color=\"inherit\" variant=\"outlined\" className={classes.link}>\n              Login\n            </Button>\n          )}\n          {user.loggedIn && (\n            <Button onClick={logout} color=\"inherit\" variant=\"outlined\" className={classes.link}>\n              Logout\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    roles: PropTypes.string,\n    loggedIn: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default NavBar;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component, user, roles, ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      if (!user.loggedIn) {\n        return <Redirect to={{ pathname: '/' }} />;\n      }\n      if (!user.roles.split(',').some((r) => roles.indexOf(r) >= 0)) {\n        return <Redirect to={{ pathname: '/' }} />;\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\nPrivateRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    roles: PropTypes.string,\n    loggedIn: PropTypes.bool,\n  }).isRequired,\n  roles: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\n\nconst UserList = () => (\n  <div>user list</div>\n);\n\nexport default UserList;\n","const Role = {\n  Admin: 'ADMIN',\n  Creator: 'CREATOR',\n  Basic: 'BASIC',\n};\n\nexport default Role;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getUser } from '../helper/UserService';\n\nconst GameDetailDialog = ({ item, handleDeleteGame }) => {\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const [user, setUser] = useState({\n    name: '',\n    roles: '',\n    loggedIn: false,\n  });\n\n  useEffect(() => {\n    setUser(getUser());\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\n        Details\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{item.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Description:\n            {' '}\n            {item.description}\n          </DialogContentText>\n          <DialogContentText>\n            Author:\n            {' '}\n            {item.author}\n          </DialogContentText>\n          <DialogContentText>\n            Language:\n            {' '}\n            {item.language}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {(user.roles.includes('CREATOR') || user.roles.includes('ADMIN')) && (\n          <Button onClick={() => { handleDeleteGame(item.id); handleClose(); }} color=\"secondary\">\n            Delete\n          </Button>\n          )}\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nGameDetailDialog.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.number,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    language: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n  handleDeleteGame: PropTypes.func.isRequired,\n};\n\nexport default GameDetailDialog;\n","const removeItemFromArrayById = (array, id) => {\n  const removeIndex = array.map((obj) => obj.id).indexOf(id);\n  if (removeIndex > -1) {\n    array.splice(removeIndex, 1);\n    return array;\n  }\n  return array;\n};\n\nexport default removeItemFromArrayById;\n","import React, { useState, useEffect } from 'react';\nimport {\n  CardActions, Grid, Typography, makeStyles, Container, Grow, Snackbar, CircularProgress,\n} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { getNoTokenRequest, deleteRequest } from '../../helper/ApiRequests';\nimport GameDetailDialog from '../../components/GameDetailDialog';\nimport removeItemFromArrayById from '../../helper/HelperFunctions';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  loading: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n  const [originalGames, setOriginalGames] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    async function fetchOriginalGames() {\n      const response = await getNoTokenRequest('/games/original');\n      setOriginalGames(response.data);\n    }\n    fetchOriginalGames();\n  }, []);\n\n  if (!originalGames) {\n    return (\n      <div className={classes.loading}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleSnackbarOpen = (message) => {\n    setSnackbarMessage(message);\n    setSnackbarOpen(true);\n  };\n\n  const handleDeleteGame = (id) => {\n    async function fetchDeleteGame() {\n      const response = await deleteRequest(`/games/${id}`);\n      if (response.status === 'OK') {\n        setOriginalGames(removeItemFromArrayById(originalGames, id));\n        handleSnackbarOpen('Game was successfully deleted');\n      } else {\n        handleSnackbarOpen('This game has translations, please delete the translations first!');\n      }\n    }\n    fetchDeleteGame();\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        {/* <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Album layout\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Something short and leading about the collection below—its contents, the creator,\n              etc.\n              Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n              entirely.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Main call to action\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Secondary action\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div> */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            autoHideDuration={6000}\n            open={snackbarOpen}\n            onClose={handleSnackbarClose}\n            message={snackbarMessage}\n          />\n          <Grid container spacing={4}>\n            {originalGames.map((game) => (\n              <Grow\n                key={game.id}\n                in\n                style={{ transformOrigin: '0 0 0' }}\n                {...({ timeout: 2000 })}\n              >\n                <Grid item xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://source.unsplash.com/collection/board-game\"\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {game.title}\n                      </Typography>\n                      <Typography>\n                        {game.description.slice(0, 70)}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <GameDetailDialog item={game} handleDeleteGame={handleDeleteGame} />\n                      {/* <Button size=\"small\" color=\"primary\">\n                        View\n                      </Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Edit\n                      </Button> */}\n                    </CardActions>\n                  </Card>\n                </Grid>\n              </Grow>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport {\n  Container, Typography, makeStyles, Link,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 'auto',\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nconst Copyright = () => (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    {'Copyright © '}\n    <Link color=\"inherit\" href=\"/\">\n      Board game translator\n    </Link>\n    {' '}\n    {new Date().getFullYear()}\n    .\n  </Typography>\n);\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Board game translator\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Page that fulfils all your needs\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container, makeStyles, Typography, CssBaseline, TextField,\n  FormControl, Select, MenuItem,\n  Button,\n  InputLabel,\n} from '@material-ui/core';\nimport { Form, Formik, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { getNoTokenRequest, postRequest, getRequest } from '../../helper/ApiRequests';\nimport { getUser } from '../../helper/UserService';\n\nconst StyledErrorDiv = styled.div`\n    color: red;`;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    margin: theme.spacing(1, 0),\n    minWidth: 120,\n  },\n  textField: {\n    background: 'white',\n    WebkitBoxShadow: '0 0 0 1000px white inset',\n  },\n}));\n\nconst CreateGame = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [languages, setLanguages] = useState([]);\n\n  useEffect(() => {\n    async function fetchLanguages() {\n      const response = await getNoTokenRequest('/languages');\n      setLanguages(response.data);\n    }\n    fetchLanguages();\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{ title: '', description: '', language: '' }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string().required('Title is required'),\n        description: Yup.string()\n          .required('Description is required')\n          .min(5, 'Description is too short - should be 5 characters minimum')\n          .max(255, 'Description is too long - should be 255 characters maximum'),\n      })}\n      onSubmit={async (values, { setSubmitting, setFieldError }) => {\n        const user = getUser();\n        const responseId = await getRequest(`/users/${user.name}/id`);\n        const request = {\n          title: values.title,\n          description: values.description,\n          languageId: values.language,\n          originalGameId: 0,\n          author: user.name,\n          userId: responseId.data.id,\n        };\n\n        const response = await postRequest('/games', request);\n        if (response.status === 'OK') {\n          setSubmitting(false);\n          history.push('/');\n        } else {\n          setFieldError('title', 'This game already exists');\n        }\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Typography component=\"h1\" variant=\"h5\">\n                Create a new board game\n              </Typography>\n            </div>\n            <Form className={classes.form} onSubmit={handleSubmit}>\n              <TextField\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                label=\"Title\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                placeholder=\"Enter game title\"\n                autoFocus\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                inputProps={{ className: classes.textField }}\n                className={classes.textField}\n              />\n              <ErrorMessage component={StyledErrorDiv} name=\"title\" />\n              <TextField\n                type=\"text\"\n                id=\"description\"\n                name=\"description\"\n                label=\"Description\"\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                placeholder=\"Enter game description\"\n                className={classes.textField}\n                inputProps={{ className: classes.textField }}\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <ErrorMessage component={StyledErrorDiv} name=\"description\" />\n              {/* https://material-ui.com/components/autocomplete */}\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"select-language-label\">Language</InputLabel>\n                <Select\n                  id=\"language\"\n                  name=\"language\"\n                  label=\"Language\"\n                  labelId=\"select-language-label\"\n                  className={classes.textField}\n                  inputProps={{ className: classes.textField }}\n                  value={values.language}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  required\n                >\n                  {languages.map((language) => (\n                    <MenuItem key={language.id} value={language.id}>{language.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                className={classes.submit}\n              >\n                Create\n              </Button>\n            </Form>\n          </Container>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default CreateGame;\n","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter, Switch, Route,\n} from 'react-router-dom';\nimport LoginForm from './pages/LoginPage/LoginForm';\nimport RegisterForm from './pages/RegisterPage/RegisterForm';\nimport { getUser } from './helper/UserService';\nimport NavBar from './components/NavBar';\nimport PrivateRoute from './helper/PrivateRoute';\nimport UserList from './pages/Admin/UsersPage/UserList';\nimport Role from './helper/Role';\nimport HomePage from './pages/HomePage/HomePage';\nimport Footer from './components/Footer';\nimport CreateGame from './pages/GamePage/CreateGame';\n\nconst Routes = () => {\n  const [user, setUser] = useState({\n    name: '',\n    roles: '',\n    loggedIn: false,\n  });\n\n  useEffect(() => {\n    setUser(getUser());\n  }, []);\n\n  return (\n    <BrowserRouter basename=\"/BGT-frontend\">\n      <NavBar user={user} />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/register\" component={RegisterForm} />\n        <PrivateRoute\n          path=\"/games/add\"\n          component={CreateGame}\n          user={user}\n          roles={[Role.Admin, Role.Creator]}\n        />\n        <PrivateRoute exact path=\"/users\" component={UserList} user={user} roles={[Role.Admin]} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n};\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Routes from './Routes';\nimport { setUser } from './helper/UserService';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    backgroundColor: '#eaeff1',\n  },\n}));\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setUser();\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <div className={classes.root}>\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}